[workspace]
members = [
    ".",
    "sea-query-derive",
    "examples/postgres",
    "examples/postgres_json",
    "examples/cockroach",
    "examples/cockroach_json",
    "examples/rusqlite",
    "examples/sqlx_mysql",
    "examples/sqlx_postgres",
    "examples/sqlx_sqlite",
]

[package]
name = "sea-query"
version = "0.23.0"
authors = [
    "Chris Tsang <tyt2y7@gmail.com>",
    "Billy Chan <ccw.billy.123@gmail.com>",
]
edition = "2021"
description = "ðŸŒŠ A dynamic query builder for MySQL, Postgres and SQLite"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/sea-query"
repository = "https://github.com/SeaQL/sea-query"
categories = ["database"]
keywords = ["database", "sql", "mysql", "postgres", "sqlite"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lib]
name = "sea_query"
path = "src/lib.rs"

[dependencies]
sea-query-derive = { version = "0.2.0", path = "sea-query-derive", optional = true }
serde_json = { version = "^1", optional = true }
bytes = { version = "^1", optional = true }
chrono = { version = "^0", optional = true }
postgres-types = { version = "^0", optional = true }
rust_decimal = { version = "^1", optional = true }
bigdecimal = { version = "^0.2", optional = true }
uuid = { version = "^0", optional = true }
proc-macro2 = { version = "1", optional = true }
quote = { version = "^1", optional = true }
time = { version = "^0.2", optional = true }

[dev-dependencies]
criterion = { version = "0.3", features = ["html_reports"] }
pretty_assertions = { version = "^1" }

[features]
backend-mysql = []
backend-postgres = []
backend-sqlite = []
default = ["derive", "backend-mysql", "backend-postgres", "backend-sqlite"]
derive = ["sea-query-derive"]
postgres = ["bytes", "postgres-types"]
postgres-chrono = ["with-chrono", "postgres-types/with-chrono-0_4"]
postgres-json = ["with-json", "postgres-types/with-serde_json-1"]
postgres-rust_decimal = ["with-rust_decimal", "rust_decimal/db-postgres"]
postgres-bigdecimal = ["with-bigdecimal"]
postgres-uuid = ["with-uuid", "postgres-types/with-uuid-0_8"]
postgres-array = ["postgres-types/array-impls"]
postgres-interval = ["proc-macro2", "quote"]
postgres-time = ["with-time", "postgres-types/with-time-0_2"]
rusqlite = []
sqlx-mysql = []
sqlx-postgres = []
sqlx-sqlite = []
thread-safe = []
with-chrono = ["chrono"]
with-json = ["serde_json"]
with-rust_decimal = ["rust_decimal"]
with-bigdecimal = ["bigdecimal"]
with-uuid = ["uuid"]
with-time = ["time"]

[[test]]
name = "test-derive"
path = "tests/derive/mod.rs"
required-features = ["derive"]

[[test]]
name = "test-error"
path = "tests/error/mod.rs"
required-features = []

[[test]]
name = "test-mysql"
path = "tests/mysql/mod.rs"
required-features = ["backend-mysql"]

[[test]]
name = "test-postgres"
path = "tests/postgres/mod.rs"
required-features = ["backend-postgres"]

[[test]]
name = "test-sqlite"
path = "tests/sqlite/mod.rs"
required-features = ["backend-sqlite"]

[[bench]]
name = "basic"
harness = false
